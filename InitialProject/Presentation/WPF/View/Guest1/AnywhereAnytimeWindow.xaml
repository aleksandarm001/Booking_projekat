<Window x:Class="InitialProject.Presentation.WPF.View.Guest1.AnywhereAnytimeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:val="clr-namespace:InitialProject.Presentation.WPF.ViewModel"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:i1="clr-namespace:InitialProject.Presentation.WPF.View"
        xmlns:local1="clr-namespace:InitialProject.Presentation.WPF.View" 
        xmlns:local="clr-namespace:InitialProject.Presentation.WPF.View.Guest1" 
        xmlns:guest1="clr-namespace:InitialProject.Presentation.WPF.ViewModel.Guest1" 
        d:DataContext="{d:DesignInstance Type=guest1:AnywhereAnytimeViewModel}"
        mc:Ignorable="d"
        Title="AnywhereAnytimeWindow" Height="650" Width="1100"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStyle="None">
    <Window.Resources>
        <local1:ValidationToCommandParameterConverter x:Key="ValidationToCommandParameterConverter" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="F10">
            <KeyBinding.Command>
                <Binding Path="DataContext.ApplyFiltersCommand" RelativeSource="{RelativeSource AncestorType={x:Type Window}}" />
            </KeyBinding.Command>
            <KeyBinding.CommandParameter>
                <MultiBinding Converter="{StaticResource ValidationToCommandParameterConverter}">
                    <Binding ElementName="StartDateTextBox" Path="(Validation.HasError)" />
                    <Binding ElementName="EndDatePicker" Path="(Validation.HasError)" />
                    <Binding ElementName="textBox1" Path="(Validation.HasError)" />
                    <Binding ElementName="textBox2" Path="(Validation.HasError)" />
                </MultiBinding>
            </KeyBinding.CommandParameter>
        </KeyBinding>
        <KeyBinding Key="F1" Command="{Binding FocusFilters_Command}" CommandParameter="{Binding ElementName=StartDateTextBox}"/>
        <KeyBinding Key="F2" Command="{Binding FocusTable_Command}" CommandParameter="{Binding ElementName=accommodationsDataGrid}"/>
        <KeyBinding Key="F11" Command="{Binding ResetFiltersCommand}" />
    </Window.InputBindings>
    <Border CornerRadius="12" BorderThickness="5" Background="White" Margin="0,0,0,0">
        <Border.BorderBrush>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#002D3A" Offset="0"/>
                <GradientStop Color="#00A76D" Offset="0.75"/>
            </LinearGradientBrush>
        </Border.BorderBrush>
        <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="110"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="1" BorderBrush="Black" BorderThickness="0,1,0,1">
            <Image Source="/Infrastructure/Resources/Images/AccommodationDisplay.png" Width="1080" Height="110"  Margin="0,0,0,0"/>
        </Border>
        <Image Source="/Infrastructure/Resources/Images/BookBuddy_logo1.png" Margin="-2,4,5,4"></Image>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="180"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="1">
                <StackPanel Orientation="Horizontal" Margin="20,20,0,0">
                    <TextBlock Text="{Binding AccommodationsNumber, UpdateSourceTrigger=PropertyChanged}" FontSize="26" FontWeight="DemiBold" Margin="0,0,5,0"></TextBlock>
                    <TextBlock Text="Accommodation(s) Match Filter Criteria" FontSize="26" FontWeight="DemiBold"></TextBlock>
                </StackPanel>



                <DataGrid Style="{DynamicResource DataGridStyle1}" CellStyle="{DynamicResource DataGridCellStyle1}" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" RowStyle="{DynamicResource DataGridRowStyle2}" 
                          Width="880" Height="380" Margin="10,30,0,0" HorizontalAlignment="Left" x:Name="accommodationsDataGrid"
                  ItemsSource="{Binding Path = Accommodations, UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding Path= SelectedAccommodation, UpdateSourceTrigger=PropertyChanged}"
                  IsReadOnly="True" SelectionMode="Single" AutoGenerateColumns="False" >
                        <i:Interaction.Triggers>
                            <i1:EnterKeyDownEventTrigger EventName="PreviewKeyDown">
                                <i:InvokeCommandAction Command="{Binding ReserveOnEnter_Command}"/>
                            </i1:EnterKeyDownEventTrigger>
                        </i:Interaction.Triggers>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Accommodation Name" Width="*" Binding="{Binding AccommodationName}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Country" Width="0.75*" Binding="{Binding Location.Country}"></DataGridTextColumn>
                        <DataGridTextColumn Header="City" Width="0.75*" Binding="{Binding Location.City}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Accommodation Type" Width="0.95*" Binding="{Binding TypeOfAccommodation}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Check-In Date" Width="0.7*" Binding="{Binding CheckInOutDates.SStartDate}"></DataGridTextColumn>
                        <DataGridTextColumn Header="Check-Out Date" Width="0.75*" Binding="{Binding CheckInOutDates.SEndDate}"></DataGridTextColumn>
                        <DataGridTemplateColumn Header="Book" Width="0.55*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button x:Name="reserveButton" BorderThickness="0" Content="Book" Foreground="White"
                                            Command="{Binding DataContext.ReserveCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                        FontSize="12" FontFamily="Montserrat" Cursor="Hand">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Background" Value="#00A76D"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#078563"/>
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="True">
                                                        <Setter Property="FocusVisualStyle">
                                                            <Setter.Value>
                                                                <Style>
                                                                    <Setter Property="Control.BorderThickness" Value="2"/>
                                                                    <Setter Property="Control.BorderBrush" Value="#FF0000"/>
                                                                </Style>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <Border Width="60" Height="30" CornerRadius="10" Background="{TemplateBinding Background}">
                                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>
            <Border Grid.Row="1" CornerRadius="0 50 0 0" Background="#00734B">
                <StackPanel Grid.Row="1" Width="140" Margin="0, 20, 0, 0">
                    <TextBlock Text="Search Filters" FontSize="16" Foreground="White" FontWeight="DemiBold" HorizontalAlignment="Center" Margin="0,5,0,10"/>
                    <StackPanel Margin="0,30,0,10">
                        <TextBlock Text="Start Date" Margin="0,0,0,5" Foreground="White" HorizontalAlignment="Left" />
                            <TextBox Width="150" Height="25" x:Name ="StartDateTextBox" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <TextBox.Text>
                                    <Binding Path="SStartDay" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <val:DateValidation ValidationStep="RawProposedValue"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                                <Validation.ErrorTemplate>
                                    <ControlTemplate>
                                        <StackPanel>
                                            <AdornedElementPlaceholder x:Name="textBox1"/>
                                            <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Validation.ErrorTemplate>
                            </TextBox>
                        </StackPanel>
                    <StackPanel Margin="0,0,0,10">
                        <TextBlock Text="End Date" Margin="0,0,0,5" Foreground="White"  HorizontalAlignment="Left" />
                            <TextBox Width="150" Height="25" x:Name ="EndDatePicker" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <TextBox.Text>
                                    <Binding Path="SEndDay" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <val:DateValidation ValidationStep="RawProposedValue"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                                <Validation.ErrorTemplate>
                                    <ControlTemplate>
                                        <StackPanel>
                                            <AdornedElementPlaceholder x:Name="textBox2"/>
                                            <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Validation.ErrorTemplate>
                            </TextBox>
                        </StackPanel>
                    <StackPanel Margin="0,0,0,20">
                        <TextBlock Foreground="White" Text="Number of guests" Margin="0,0,0,5" HorizontalAlignment="Left" />
                        <TextBox Name="textBox1" Background="#EFF2F7"  HorizontalAlignment="Left" TextWrapping="Wrap" 
                         VerticalAlignment="Top" 
                         Width="140" Height="25">
                            <TextBox.Text>
                                <Binding Path="StrNumberOfGuests" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <val:NumericValidation ValidationStep="RawProposedValue"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                            <Validation.ErrorTemplate>
                                <ControlTemplate>
                                    <StackPanel>
                                        <AdornedElementPlaceholder x:Name="textBox"/>
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Validation.ErrorTemplate>
                        </TextBox>
                    </StackPanel>
                    <StackPanel Margin="0,0,0,20">
                        <TextBlock Foreground="White" Text="Reservation days" Margin="0,0,0,5" HorizontalAlignment="Left" />
                        <TextBox Name="textBox2" Background="#EFF2F7"  HorizontalAlignment="Left" TextWrapping="Wrap" 
                         VerticalAlignment="Top" 
                         Width="140" Height="25">
                            <TextBox.Text>
                                <Binding Path="StrReservationDays" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <val:NumericValidation ValidationStep="RawProposedValue"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                            <Validation.ErrorTemplate>
                                <ControlTemplate>
                                    <StackPanel>
                                        <AdornedElementPlaceholder x:Name="textBox"/>
                                        <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                                    </StackPanel>
                                </ControlTemplate>
                            </Validation.ErrorTemplate>
                        </TextBox>
                    </StackPanel>
                    <Button BorderThickness="0"
                            Content="Apply filters (F10)"
                            Foreground="White"
                            FontSize="12"
                            FontFamily="Montserrat"
                            Cursor="Hand"                           
                            Margin="0,20,0,0"
                             Command="{Binding ApplyFiltersCommand}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="#BB141A"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#A61F00"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding ElementName=textBox1, Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ElementName=textBox2, Path=(Validation.HasError)}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Width="110" Height="30" CornerRadius="10"
                            Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    <Button BorderThickness="0"
                            Content="Restore filters (F11)"
                            Foreground="White"
                            FontSize="12"
                            FontFamily="Montserrat"
                            Cursor="Hand"                           
                            Margin="0,5,0,0"
                            Command="{Binding ResetFiltersCommand}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="#BB141A"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#A61F00"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Width="110" Height="30" CornerRadius="10"
                            Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
            </Border>
        </Grid>
        </Grid>
    </Border>
</Window>
